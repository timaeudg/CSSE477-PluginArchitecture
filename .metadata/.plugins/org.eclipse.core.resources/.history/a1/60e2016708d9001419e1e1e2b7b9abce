package main;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

import framework.IPlugin;
import framework.Plugin;

public class PluginLoader {

	List<Plugin> loadPlugins;
	
	public PluginLoader(List<Plugin> plugins){
		
		loadPlugins = plugins;
		
	};
	
	public PluginLoader(){
		
		loadPlugins = new ArrayList<>();
		try{
		System.out.println("yi");
		String current = new java.io.File( "." ).getCanonicalPath();
		System.out.println(current);
		loadJar(current + "/src/main/examplePlugin.jar");
		
		} catch(Exception e) {
			
		}
	};
	
	public void loadJar(String filePath) throws ClassNotFoundException, IOException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException {
		
		JarFile jarFile = new JarFile(filePath);
	    Enumeration<JarEntry> e = jarFile.entries();

	    URL[] urls = { new URL("jar:file:" + filePath+"!/") };
	    URLClassLoader cl = URLClassLoader.newInstance(urls);
	    System.out.println("guh");
	        while (e.hasMoreElements()) {
	        	System.out.println("bleh");
	            JarEntry je = (JarEntry) e.nextElement();
	            if(je.isDirectory() || !je.getName().endsWith(".class")){
	                continue;
	            }
	            String className = je.getName().substring(0,je.getName().length()-6);
	            className = className.replace('/', '.');
	            Class c = cl.loadClass(className);
	            if(IPlugin.class.isAssignableFrom(c)){
	            	System.out.println("true");
	            	Object i = c.newInstance();
	            	Method method = c.getDeclaredMethod("startup", null);
	            	method.invoke(i, "yay");
	            };

	    }   
		
		
	}
	
}
